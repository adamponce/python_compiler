link puny


procedure test_reverse_list()
input_list:=[1,2,3,4]
expected_output:=[4,3,2,1]
output:=input_list[-1]
if output=expected_output then
{print(="test_reverse_list PASSED")
}
else 
{print("test_replace_string FAILED: ", output, " != ", expected_output)


}
end
procedure test_sort_list()
input_list:=[4,1,3,2]
expected_output:=[1,2,3,4]
output:=[]
every i := 1 to (len(input_list)) do
{min_value:=input_list[0]
min_index:=0
every j := 1 to (1,len(input_list)) do
{if input_list[j]<min_value then
{min_value:=input_list[j]
min_index:=j
}
}
outputappend(min_value)
input_listpop(min_index)
end
if output=expected_output then
{print(="test_sort_list PASSED")
}
else 
{print("test_replace_string FAILED: ", output, " != ", expected_output)


}
}
procedure test_capitalize_string()
input_string:="hello world"
expected_output:="Hello world"
output:=input_stringcapitalize()
if output=expected_output then
{print(="test_capitalize_string PASSED")
}
else 
{print("test_replace_string FAILED: ", output, " != ", expected_output)


}
end
procedure test_replace_string()
input_string:="hello world"
expected_output:="goodbye world"
output:=input_stringreplace("hello","goodbye")
if output=expected_output then
{print(="test_replace_string PASSED")
}
else 
{print("test_replace_string FAILED: ", output, " != ", expected_output)


}
end
procedure run_tests()
test_reverse_list()
test_sort_list()
test_capitalize_string()
test_replace_string()


end
procedure main()
run_tests()

end
